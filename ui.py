# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import json

data = {}

with open('notes.json', 'r', encoding='utf-8') as file:
    a = json.load(file)
    if str(a) == '{}':
        with open('notes.json', 'w', encoding='utf-8') as file:
            a = {'Початкова замітка': {'текст': '''Це початкова замітка. Вона буде з'являтися кожен раз, коли ти видаляєш всі замітки. ''', 'теги' : []}}
            json.dump(a, file)

note_name = ''
tag_name = ''

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Smart Notes")
        MainWindow.resize(600, 500)
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.UpArrowCursor))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 10, 581, 481))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.text_edit = QtWidgets.QTextEdit(self.horizontalLayoutWidget)
        self.text_edit.setObjectName("text_edit")
        self.horizontalLayout.addWidget(self.text_edit)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.lb_notes = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.lb_notes.setObjectName("lb_notes")
        self.verticalLayout.addWidget(self.lb_notes)
        self.list_for_notes = QtWidgets.QListWidget(self.horizontalLayoutWidget)
        self.list_for_notes.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(8)
        self.list_for_notes.setFont(font)
        self.list_for_notes.setObjectName("list_for_notes")
        self.verticalLayout.addWidget(self.list_for_notes)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.btn_create_note = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.btn_create_note.setObjectName("btn_create_note")
        self.horizontalLayout_2.addWidget(self.btn_create_note)
        self.btn_delete_note = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.btn_delete_note.setObjectName("btn_delete_note")
        self.horizontalLayout_2.addWidget(self.btn_delete_note)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.btn_save_note = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.btn_save_note.setObjectName("btn_save_note")
        self.verticalLayout.addWidget(self.btn_save_note)
        self.lb_tags = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.lb_tags.setObjectName("lb_tags")
        self.verticalLayout.addWidget(self.lb_tags)
        self.list_for_tags = QtWidgets.QListWidget(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(8)
        self.list_for_tags.setFont(font)
        self.list_for_tags.setObjectName("list_for_tags")
        self.verticalLayout.addWidget(self.list_for_tags)
        self.line_search_tag = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        self.line_search_tag.setText("")
        self.line_search_tag.setObjectName("line_search_tag")
        self.verticalLayout.addWidget(self.line_search_tag)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.btn_add_tag = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.btn_add_tag.setObjectName("btn_add_tag")
        self.horizontalLayout_6.addWidget(self.btn_add_tag)
        self.btn_delete_tag = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.btn_delete_tag.setObjectName("btn_delete_tag")
        self.horizontalLayout_6.addWidget(self.btn_delete_tag)
        self.verticalLayout.addLayout(self.horizontalLayout_6)
        self.btn_search = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.btn_search.setObjectName("btn_search")
        self.verticalLayout.addWidget(self.btn_search)
        self.horizontalLayout.addLayout(self.verticalLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.show_note()

        self.list_for_notes.itemClicked.connect(self.show)
        self.list_for_notes.itemClicked.connect(self.show_tags)

        self.btn_create_note.clicked.connect(self.add_note)
        self.btn_delete_note.clicked.connect(self.del_note)
        self.btn_save_note.clicked.connect(self.save_note)

        self.btn_add_tag.clicked.connect(self.add_tag)
        self.btn_delete_tag.clicked.connect(self.del_tag)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Smart Notes"))
        self.lb_notes.setText(_translate("MainWindow", "Список заміток"))
        self.btn_create_note.setText(_translate("MainWindow", "Створити замітку"))
        self.btn_delete_note.setText(_translate("MainWindow", "Видалити замітку"))
        self.btn_save_note.setText(_translate("MainWindow", "Зберегти замітку"))
        self.lb_tags.setText(_translate("MainWindow", "Список тегів"))
        self.line_search_tag.setPlaceholderText(_translate("MainWindow", "Введіть тег..."))
        self.btn_add_tag.setText(_translate("MainWindow", "Додати до замітки"))
        self.btn_delete_tag.setText(_translate("MainWindow", "Відкріпити від замітки"))
        self.btn_search.setText(_translate("MainWindow", "Шукати замітки по тегу"))

    def show_note(self):
        global data
        with open('notes.json', 'r', encoding='utf-8') as file:
            data = json.load(file)
        self.list_for_notes.addItems(data.keys())

    def show(self):
        self.list_for_tags.clear()
        t = self.list_for_notes.currentItem().text()
        self.text_edit.setText(data[t]['текст'])

    def show_tags(self):
        t = self.list_for_notes.currentItem().text()
        self.list_for_tags.addItems(data[t]['теги'])

    def add_note(self):
        global note_name
        note_name, ok = QtWidgets.QInputDialog.getText(MainWindow, 'Додати замітку', 'Назва замітки')
        if note_name and ok:
            data[note_name] = {'текст': '', 'теги' : []}
            self.list_for_notes.addItem(note_name)
            with open('notes.json', 'w', encoding='utf-8') as file:
                json.dump(data, file, sort_keys=True)

    def del_note(self):
        if self.list_for_notes.currentItem():
            t = self.list_for_notes.currentItem().text()
            del data[t]
            with open('notes.json', 'w', encoding='utf-8') as file:
                json.dump(data, file, sort_keys=True)
            self.list_for_notes.clear()
            self.list_for_notes.addItems(data.keys())
            self.text_edit.clear()  
            self.list_for_tags.clear()
            self.show_tags

    def save_note(self):
        if self.list_for_notes.currentItem():
            edited_text = self.text_edit.toPlainText()
            data[self.list_for_notes.currentItem().text()]['текст'] = edited_text 
            with open('notes.json', 'w', encoding='utf-8') as file:
                json.dump(data, file, sort_keys=True)

    def add_tag(self):
        global tag_name
        tag_name, ok = QtWidgets.QInputDialog.getText(MainWindow, 'Додати тег', 'Назва тегу')
        if tag_name and ok:
            if tag_name and not (tag_name in data[self.list_for_notes.currentItem().text()]['теги']):
                data[self.list_for_notes.currentItem().text()]['теги'].append(tag_name)
                self.list_for_tags.addItem(tag_name)
                with open('notes.json', 'w', encoding='utf-8') as file:
                    json.dump(data, file, sort_keys=True)

    def del_tag(self):
        if self.list_for_tags.currentItem():
            data[self.list_for_notes.currentItem().text()]['теги'].remove(self.list_for_tags.currentItem().text())
            with open('notes.json', 'w', encoding='utf-8') as file:
                json.dump(data, file, sort_keys=True)
            self.list_for_tags.clear()
            self.show_tags()



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())